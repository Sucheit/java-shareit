DROP TABLE IF EXISTS bookings;
DROP TABLE IF EXISTS comments;
DROP TABLE IF EXISTS items;
DROP TABLE IF EXISTS users;

CREATE TABLE IF NOT EXISTS public.users (
	user_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	email varchar(255) NOT NULL UNIQUE,
	name varchar(255) NOT NULL UNIQUE,
	CONSTRAINT PK_users PRIMARY KEY (user_id)
);

CREATE TABLE IF NOT EXISTS public.items (
	item_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	available bool NOT NULL,
	description varchar(255) NOT NULL,
	name varchar(255) NOT NULL,
	user_id BIGINT NOT NULL,
    CONSTRAINT PK_items PRIMARY KEY (item_id),
	CONSTRAINT FK_items FOREIGN KEY (user_id) REFERENCES public.users(user_id) ON DELETE CASCADE ON UPDATE RESTRICT
);

CREATE TABLE IF NOT EXISTS public.comments (
	comment_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	created timestamp NOT NULL,
	text varchar(255) NOT NULL,
	item_id BIGINT NOT NULL,
	user_id BIGINT NOT NULL,
	CONSTRAINT PK_comments PRIMARY KEY (comment_id),
	CONSTRAINT FK1_comments_item_id FOREIGN KEY (item_id) REFERENCES public.items(item_id) ON DELETE CASCADE ON UPDATE RESTRICT,
	CONSTRAINT FK2_comments_user_id FOREIGN KEY (user_id) REFERENCES public.users(user_id) ON DELETE CASCADE ON UPDATE RESTRICT
);

CREATE TABLE IF NOT EXISTS public.bookings (
	booking_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	end_time timestamp NOT NULL,
	start_time timestamp NOT NULL,
	status varchar(255) NOT NULL,
	item_id BIGINT NOT NULL,
	user_id BIGINT NOT NULL,
	CONSTRAINT PK_bookings PRIMARY KEY (booking_id),
	CONSTRAINT FK1_bookings_item_id FOREIGN KEY (item_id) REFERENCES public.items(item_id) ON DELETE CASCADE ON UPDATE RESTRICT,
	CONSTRAINT FK2_bookings_user_id FOREIGN KEY (user_id) REFERENCES public.users(user_id) ON DELETE CASCADE ON UPDATE RESTRICT
);
